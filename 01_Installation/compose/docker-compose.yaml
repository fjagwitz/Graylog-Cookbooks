services:
  nginx: 
    image: nginx:latest
    hostname: nginx
    ports: 
      # WebUI
      - 443:443
      - 80:80
      # API
      - 3443:3443
      - 380:380
      # Syslog Input
      - 514:514
      - 514:514/udp
      # Beats Input 5044
      - 5044:5044
      # RAW UDP Input 
      - 5555:5555
      - 5555:5555/udp
      # Gelf Inputs
      - 12201:12201
      - 12201:12201/udp 
    volumes:
      - "${GL_GRAYLOG_NGINX}/nginx.conf:/etc/nginx/nginx.conf"
      - "${GL_GRAYLOG_NGINX}/http.conf:/etc/nginx/conf.d/http.conf"
      - "${GL_GRAYLOG_NGINX}/stream.conf:/etc/nginx/conf.d/stream.conf"
      - "${GL_GRAYLOG_NGINX}/ssl:/etc/nginx/ssl"
    restart: "always"

  mongodb1:
    image: "jcr.fritzdata.de/containers/mongo:7"
    hostname: "mongodb1"
    volumes:
      - "mongodb-data-01:/data/db"
    restart: "always"

  datanode1:
    image: "jcr.fritzdata.de/containers/opensearchproject/opensearch:2.13.0"
    hostname: "datanode1"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${GL_OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
      - "node.name=datanode1"
      - "cluster.name=os-docker-cluster"
      - "discovery.seed_hosts=datanode2,datanode3"
      - "cluster.initial_master_nodes=datanode1,datanode2,datanode3"
      - "bootstrap.memory_lock=false"
      - "action.auto_create_index=false"

      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    volumes:
      - "${GL_OPENSEARCH_DATA}/datanode1:/usr/share/opensearch/data"
    restart: "on-failure"

  datanode2:
    image: "jcr.fritzdata.de/containers/opensearchproject/opensearch:2.13.0"
    hostname: "datanode2"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${GL_OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
      - "node.name=datanode2"
      - "cluster.name=os-docker-cluster"
      - "discovery.seed_hosts=datanode1,datanode3"
      - "cluster.initial_master_nodes=datanode1,datanode2,datanode3"
      - "bootstrap.memory_lock=false"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    volumes:
      - "${GL_OPENSEARCH_DATA}/datanode2:/usr/share/opensearch/data"
    restart: "on-failure"

  datanode3:
    image: "jcr.fritzdata.de/containers/opensearchproject/opensearch:2.13.0"
    hostname: "datanode3"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${GL_OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
      - "node.name=datanode3"
      - "cluster.name=os-docker-cluster"
      - "discovery.seed_hosts=datanode1,datanode2"
      - "cluster.initial_master_nodes=datanode1,datanode2,datanode3"
      - "bootstrap.memory_lock=false"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    volumes:
      - "${GL_OPENSEARCH_DATA}/datanode3:/usr/share/opensearch/data"
    restart: "on-failure"

  graylog1:
    image: "jcr.fritzdata.de/containers/graylog/graylog-enterprise:6.0"
    hostname: "graylog1"
    depends_on:
      - "mongodb1"
      - "datanode1"
      - "datanode2"
      - "datanode3"
    entrypoint: "/docker-entrypoint.sh"
    environment:
      # Graylog Environment Variables (settings known from server.conf: https://go2docs.graylog.org/5-0/setting_up_graylog/server.conf.html)
      # Work with the .env-example file to configure these values - preconfigured value for ROOT_PASSWORD is "Secr3t2024!"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      # Adapt these variables to your environment, refer to "server.conf" documentation (see above)
      GRAYLOG_IS_LEADER: "true"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_PUBLISH_URI: "http://graylog1:9000"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb1:27017/graylog"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://datanode1:9200,http://datanode2:9200,http://datanode3:9200"
      GRAYLOG_TELEMETRY_ENABLED: "false"
      GRAYLOG_HTTP_EXTERNAL_URI: "https://my.graylog.test/"
      # Notification Script Path / API URI
      GRAYLOG_INTEGRATIONS_SCRIPTS_DIR: "/etc/graylog/server/notifications"
      GRAYLOG_INTEGRATIONS_WEB_INTERFACE_URI: "https://my.firewall.rest.endpoint:443" 
      GRAYLOG_ALLOWED_AUXILIARY_PATH: "/etc/graylog/server"
      # Graylog Proxy Settings (list of patterns separated by “,” - may start or end with a “*” for wildcards)
      GRAYLOG_HTTP_PROXY_URI: ""
      GRAYLOG_HTTP_NON_PROXY_HOSTS: "graylog*, mongodb*, datanode*, *"
      # Graylog Reporting Configurations
      GRAYLOG_REPORT_RENDER_URI: "http://my.graylog.test/"
      GRAYLOG_REPORT_DISABLE_SANDBOX: "true"
      ## Graylog Content Pack Handling
      GRAYLOG_CONTENT_PACKS_LOADER_ENABLED: "false"
      GRAYLOG_CONTENT_PACKS_DIR: "/etc/graylog/server/contentpacks"
      #GRAYLOG_CONTENT_PACKS_AUTO_INSTALL: ""      
      # Email Configurations
      GRAYLOG_TRANSPORT_EMAIL_ENABLED: "true"
      GRAYLOG_TRANSPORT_EMAIL_HOSTNAME: "my.email.system"
      GRAYLOG_TRANSPORT_EMAIL_PORT: "587"
      GRAYLOG_TRANSPORT_EMAIL_USE_AUTH: "true"
      GRAYLOG_TRANSPORT_EMAIL_USE_TLS: "true"
      GRAYLOG_TRANSPORT_EMAIL_USE_SSL: "false"
      GRAYLOG_TRANSPORT_EMAIL_AUTH_USERNAME: "my-graylog-mail-account"
      GRAYLOG_TRANSPORT_EMAIL_AUTH_PASSWORD: "my-very-secure-P@$$w0rd"
      GRAYLOG_TRANSPORT_EMAIL_SUBJECT_PREFIX: ""
      GRAYLOG_TRANSPORT_EMAIL_FROM_EMAIL: ""
      GRAYLOG_TRANSPORT_EMAIL_WEB_INTERFACE_URL: "https://my.graylog.test"   
      # Grafana Metrics Monitoring
      GRAYLOG_PROMETHEUS_EXPORTER_ENABLED: "true"
      GRAYLOG_PROMETHEUS_EXPORTER_BIND_ADDRESS: "0.0.0.0"
      # Indices naming
      GRAYLOG_DEFAULT_EVENTS_INDEX_PREFIX: "gl-non-production-events"
      GRAYLOG_DEFAULT_SYSTEM_EVENTS_INDEX_PREFIX: "gl-non-production-system-events"
    volumes:
      - "graylog-data-01:/usr/share/graylog/data/data"
      - "${GL_GRAYLOG_JOURNAL}:/usr/share/graylog/data/journal"
      # only required if you want to store archives in a local folder; make sure the "archives" folder has 1100:1100 permissions on the host; don't use in Cloud Environments but work with s3 Backend instead
      - "${GL_GRAYLOG_ARCHIVES}:/usr/share/graylog/data/archives"
      # only required if you want to run script notifications (bash, any other script language); make sure the "notifications" folder has 1100:1100 permissions on the host
      - "${GL_GRAYLOG_NOTIFICATIONS}:/etc/graylog/server/notifications"
      # only required if you want to use predefined content packs
      - "${GL_GRAYLOG_CONTENTPACKS}:/etc/graylog/server/contentpacks:ro"
      # only required if you want to work with Geolocation Data
      - "${GL_GRAYLOG_MAXMIND}:/etc/graylog/server/mmdb:ro"
      # only required if you want to work with Lookup Tables for Enrichment
      - "${GL_GRAYLOG_LOOKUPTABLES}:/etc/graylog/server/lookuptables:ro"
    restart: "on-failure"

  # This container can be skipped based on your needs, just make sure to remove the corresponding locations in nginx.conf  
  grafana1:
    image: "jcr.fritzdata.de/containers/grafana/grafana-oss:latest"
    hostname: "grafana1"
    environment:
     GF_SERVER_ROOT_URL: "https://my.graylog.test/grafana"
     GF_INSTALL_PLUGINS: "grafana-clock-panel"
    volumes:
     - "grafana-data-01:/var/lib/grafana"
    restart: "unless-stopped"

  # This container can be skipped based on your needs, just make sure to remove the corresponding locations in nginx.conf  
  prometheus1:
    image: "jcr.fritzdata.de/containers/prom/prometheus:latest"
    hostname: "prometheus1"
    environment: 
      LISTEN_ADDRESS: "0.0.0.0"
      LISTEN_PORT: '9090'
    command:
      - '--config.file=/etc/prometheus/prometheus-gls.yml'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/prometheus/'
      - '--web.listen-address=0.0.0.0:9090'
    volumes:
      - "prometheus-data-01:/prometheus"
      - "${GL_GRAYLOG_PROMETHEUS}/prometheus-gls.yml:/etc/prometheus/prometheus-gls.yml"
    restart: unless-stopped

volumes:
  graylog-data-01:
  mongodb-data-01:
  grafana-data-01:
  prometheus-data-01: