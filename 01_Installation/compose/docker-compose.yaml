services:
  nginx1: 
    image: "nginx:latest"
    hostname: "nginx1"
    depends_on:
      - "graylog1"
    ports: 
      # WebUI
      - 443:443
      - 80:80
      # API
      - 3443:3443
      - 380:380
      # Syslog Input
      - 514:514
      - 514:514/udp
      # Beats Input 5044
      - 5044:5044
      - 5044:5044/udp
      # RAW UDP Input 
      - 5555:5555
      - 5555:5555/udp
      # Gelf Input
      - 12201:12201
      - 12201:12201/udp 
    volumes:
      - "${GL_GRAYLOG_NGINX1}/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "${GL_GRAYLOG_NGINX1}/http.conf:/etc/nginx/conf.d/http.conf:ro"
      - "${GL_GRAYLOG_NGINX1}/stream.conf:/etc/nginx/conf.d/stream.conf:ro"
      - "${GL_GRAYLOG_NGINX1}/ssl:/etc/nginx/ssl:ro"
    restart: "always"

  nginx2: 
    image: "nginx:latest"
    hostname: "lookuptables"
    volumes: 
      - "${GL_GRAYLOG_NGINX2}/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "${GL_GRAYLOG_NGINX2}/http.conf:/etc/nginx/conf.d/http.conf:ro"
      - "${GL_GRAYLOG_LOOKUPTABLES}:/lookuptables:ro"
    restart: "always"

  mongodb1:
    image: "mongo:7"
    hostname: "mongodb1"
    volumes:
      - "mongodb-data-01:/data/db"
    restart: "always"

  datanode1:
    image: "opensearchproject/opensearch:2.13.0"
    hostname: "datanode1"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${GL_OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
      - "node.name=datanode1"
      - "cluster.name=evaluation-cluster-opensearch"
      - "cluster.initial_master_nodes=datanode1,datanode2,datanode3"      
      - "discovery.seed_hosts=datanode2,datanode3"
      - "bootstrap.memory_lock=false"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        soft: -1 
        hard: -1
      nofile:
        soft: 262144 
        hard: 262144
    volumes:
      - "${GL_OPENSEARCH_DATA}/datanode1:/usr/share/opensearch/data"
    restart: "on-failure"

  datanode2:
    image: "opensearchproject/opensearch:2.13.0"
    hostname: "datanode2"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${GL_OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
      - "node.name=datanode2"
      - "cluster.name=evaluation-cluster-opensearch"
      - "cluster.initial_master_nodes=datanode1,datanode2,datanode3"
      - "discovery.seed_hosts=datanode1,datanode3"
      - "bootstrap.memory_lock=false"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        soft: -1 
        hard: -1
      nofile:
        soft: 262144 
        hard: 262144
    volumes:
      - "${GL_OPENSEARCH_DATA}/datanode2:/usr/share/opensearch/data"
    restart: "on-failure"

  datanode3:
    image: "opensearchproject/opensearch:2.13.0"
    hostname: "datanode3"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms4096m -Xmx4096m"
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=${GL_OPENSEARCH_INITIAL_ADMIN_PASSWORD}"
      - "node.name=datanode3"
      - "cluster.name=evaluation-cluster-opensearch"
      - "cluster.initial_master_nodes=datanode1,datanode2,datanode3"
      - "discovery.seed_hosts=datanode1,datanode2"
      - "bootstrap.memory_lock=false"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        soft: -1 
        hard: -1
      nofile:
        soft: 262144 
        hard: 262144
    volumes:
      - "${GL_OPENSEARCH_DATA}/datanode3:/usr/share/opensearch/data"
    restart: "on-failure"

  graylog1:
    image: "graylog/${GL_GRAYLOG_VERSION}:6.0.3"
    hostname: "graylog1"
    depends_on:
      - "mongodb1"
      - "datanode1"
      - "datanode2"
      - "datanode3"
    entrypoint: "/docker-entrypoint.sh"
    env_file: "graylog1.env"
    volumes:
      - "graylog-data-01:/usr/share/graylog/data/data"
      - "${GL_GRAYLOG_JOURNAL}:/usr/share/graylog/data/journal"
      # only required if you want to store archives in a local folder; make sure the "archives" folder has 1100:1100 permissions on the host; don't use in Cloud Environments but work with s3 Backend instead
      - "${GL_GRAYLOG_ARCHIVES}:/usr/share/graylog/data/archives"
      # only required if you want to run script notifications (bash, any other script language); make sure the "notifications" folder has 1100:1100 permissions on the host
      - "${GL_GRAYLOG_NOTIFICATIONS}:/etc/graylog/server/notifications"
      # only required if you want to use predefined content packs
      - "${GL_GRAYLOG_CONTENTPACKS}:/etc/graylog/server/contentpacks:ro"
      # only required if you want to work with Geolocation Data
      - "${GL_GRAYLOG_MAXMIND}:/etc/graylog/server/mmdb:ro"
      # only required if you want to work with Lookup Tables for Enrichment
      - "${GL_GRAYLOG_LOOKUPTABLES}:/etc/graylog/server/lookuptables:ro"
    restart: "on-failure"

  # This container can be skipped based on your needs, just make sure to remove the corresponding locations in nginx.conf  
  grafana1:
    image: "grafana/grafana-oss:latest"
    hostname: "grafana1"
    depends_on:
      - "prometheus1"
    environment:
     GF_SERVER_ROOT_URL: "https://${GL_GRAYLOG_ADDRESS}/grafana"
     GF_INSTALL_PLUGINS: ""
    volumes:
     - "grafana-data-01:/var/lib/grafana"
    restart: "unless-stopped"

  # This container can be skipped based on your needs, just make sure to remove the corresponding locations in nginx.conf  
  prometheus1:
    image: "prom/prometheus:latest"
    hostname: "prometheus1"
    depends_on:
      - "graylog1"
    environment: 
      LISTEN_ADDRESS: "0.0.0.0"
      LISTEN_PORT: '9090'
    command:
      - '--config.file=/etc/prometheus/prometheus-gls.yml'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/prometheus/'
      - '--web.listen-address=0.0.0.0:9090'
    volumes:
      - "prometheus-data-01:/prometheus"
      - "${GL_GRAYLOG_PROMETHEUS}/prometheus-gls.yml:/etc/prometheus/prometheus-gls.yml"
    restart: unless-stopped

volumes:
  graylog-data-01:
  mongodb-data-01:
  grafana-data-01:
  prometheus-data-01: